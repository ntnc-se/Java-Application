
import Data.QuestionDAO;
import java.awt.CardLayout;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JRadioButton;
import model.Question;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author __ntnc__
 */
public class MainScreen extends javax.swing.JFrame implements ActionListener, Runnable  {

    /**
     * Creates new form MainScreen
     */
    ResultDialog result = new ResultDialog(this, false);
    int time = 600;
    @Override
    public void run() {
        while(time > 0)
        {
            displayTime();
            time--;
            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        //displayTime();
    }
    
    private void displayTime()
    {
        int hh = time/3600;
        int mm = time%3600 / 60;
        int ss = time % 60;
        lblTime.setText( "Time left: "+hh + ":" + mm +":"+ss);
    }
     
    ArrayList<Question> questions;
    HashMap<Question,QuestionComponent> questionComponents = new HashMap<>();
    HashMap<JButton,Question> questionButtons = new HashMap<>();
    
    public MainScreen() {
        initComponents();
        this.setLocationRelativeTo(null);
        panelQuestionComponents.setLayout(new CardLayout());
        panelQuestionButtons.setLayout(new FlowLayout());
        QuestionDAO db = new QuestionDAO();
        questions = db.getQuestions();
        for (int i = 0; i < questions.size(); i++) {
            QuestionComponent qc = new QuestionComponent(questions.get(i));
            questionComponents.put(questions.get(i), qc);
            panelQuestionComponents.add(questions.get(i).getId()+"", qc);
            
            JButton btnQuestion = new JButton(""+(i+1));
            panelQuestionButtons.add(btnQuestion);
            questionButtons.put(btnQuestion,questions.get(i));
            btnQuestion.addActionListener(this);
        }
        displayQuestion(questions.get(0));
        Thread t = new Thread(this);
        t.start();
        getPoint();
    }
    
    public boolean isCorrect(QuestionComponent qc){
        int mustCorrect = 0;
        int userCorrect = 0;
        for (int i = 0; i < qc.q.getAnswers().size(); i++) {
            if (qc.q.getAnswers().get(i).isCorrect()) {
                mustCorrect++;
            }
        }
        if (qc.q.isMultipleChoice()) {
            for (int i = 0; i < qc.answerComponents.size(); i++) {
                if (((JCheckBox)qc.answerComponents.get(i)).isSelected() && qc.q.getAnswers().get(i).isCorrect()) {
                    userCorrect++;
                }
            }
        } else {
            for (int i = 0; i < qc.answerComponents.size(); i++) {
                if (((JRadioButton) qc.answerComponents.get(i)).isSelected() && qc.q.getAnswers().get(i).isCorrect()) {
                    userCorrect = 1;
                }
            }
        }
        if (mustCorrect == userCorrect) {
            return true;
        } else {
            return false;
        }
    }
    
    public int getPoint() {
        int point = 0;
        for (int i = 0; i < questions.size(); i++) {
            if (isCorrect(questionComponents.get(questions.get(i)))) {
                point++;
            }
        }
        return point;
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        JButton btnQuestion = (JButton)e.getSource();
        Question q = questionButtons.get(btnQuestion);
        displayQuestion(q);
    }
    
    public void displayQuestion(Question q)
    {
       CardLayout layout = (CardLayout)panelQuestionComponents.getLayout();
       layout.show(panelQuestionComponents,q.getId()+"");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelQuestionComponents = new javax.swing.JPanel();
        panelQuestionButtons = new javax.swing.JPanel();
        lblTime = new javax.swing.JLabel();
        btnFinish = new javax.swing.JButton();
        cbxConfirmDone = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelQuestionComponents.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panelQuestionComponentsLayout = new javax.swing.GroupLayout(panelQuestionComponents);
        panelQuestionComponents.setLayout(panelQuestionComponentsLayout);
        panelQuestionComponentsLayout.setHorizontalGroup(
            panelQuestionComponentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelQuestionComponentsLayout.setVerticalGroup(
            panelQuestionComponentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 516, Short.MAX_VALUE)
        );

        panelQuestionButtons.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panelQuestionButtonsLayout = new javax.swing.GroupLayout(panelQuestionButtons);
        panelQuestionButtons.setLayout(panelQuestionButtonsLayout);
        panelQuestionButtonsLayout.setHorizontalGroup(
            panelQuestionButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelQuestionButtonsLayout.setVerticalGroup(
            panelQuestionButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 57, Short.MAX_VALUE)
        );

        lblTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTime.setText("jLabel1");

        btnFinish.setText("Finish");
        btnFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishActionPerformed(evt);
            }
        });

        cbxConfirmDone.setText("I'm Done");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelQuestionComponents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelQuestionButtons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 463, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cbxConfirmDone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFinish)
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblTime)
                        .addGap(417, 417, 417))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblTime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelQuestionComponents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelQuestionButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFinish)
                    .addComponent(cbxConfirmDone))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishActionPerformed
        if(cbxConfirmDone.isSelected())
        {
            result.setVisible(true);
            result.display(getPoint());
        }
    }//GEN-LAST:event_btnFinishActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFinish;
    private javax.swing.JCheckBox cbxConfirmDone;
    private javax.swing.JLabel lblTime;
    private javax.swing.JPanel panelQuestionButtons;
    private javax.swing.JPanel panelQuestionComponents;
    // End of variables declaration//GEN-END:variables

    

    
}
